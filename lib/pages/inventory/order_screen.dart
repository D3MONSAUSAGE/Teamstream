import 'package:flutter/material.dart';
import 'package:teamstream/models/product.dart';
import 'package:teamstream/models/order.dart';
import 'package:teamstream/services/pocketbase/inventory_service.dart';
import 'package:teamstream/services/pocketbase/order_service.dart';

class OrderScreen extends StatefulWidget {
  final Product product;

  const OrderScreen({required this.product, super.key});

  @override
  _OrderScreenState createState() => _OrderScreenState();
}

class _OrderScreenState extends State<OrderScreen> {
  final _quantityController = TextEditingController();

  Future<void> _placeOrder() async {
    final quantity = int.tryParse(_quantityController.text) ?? 0;
    if (quantity <= 0) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Please enter a valid quantity.')),
      );
      return;
    }

    final success =
        await InventoryService.deductInventory(widget.product.id, quantity);
    if (!success) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Not enough stock available.')),
      );
      return;
    }

    final order = Order(
      id: '', // ID will be generated by PocketBase
      productId: widget.product.id,
      productName: widget.product.name,
      quantity: quantity,
      orderDate: DateTime.now(),
    );

    final id = await OrderService.createOrder(order);
    if (id != null) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Order placed successfully!')),
      );
      Navigator.pop(context);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Place Order'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            Text(
              'Product: ${widget.product.name}',
              style: TextStyle(
                fontSize: 20,
                fontWeight: FontWeight.bold,
              ),
            ),
            SizedBox(height: 16),
            TextField(
              controller: _quantityController,
              decoration: InputDecoration(
                labelText: 'Quantity',
                border: OutlineInputBorder(),
              ),
              keyboardType: TextInputType.number,
            ),
            SizedBox(height: 16),
            ElevatedButton(
              onPressed: _placeOrder,
              child: Text('Place Order'),
            ),
          ],
        ),
      ),
    );
  }
}
